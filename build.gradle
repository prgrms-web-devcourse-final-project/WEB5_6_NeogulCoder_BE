plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'grep'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

// 공통 버전 정의
ext {
	set('springCloudGcpVersion', "6.2.2")
	set('springCloudVersion', "2024.0.1")
}

repositories {
	mavenCentral()
}

dependencies {
	// 데이터 베이스 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'

	// Sql 쿼리 파라미터 보는 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

//	 테스트 데이터베이스 의존성
	testImplementation 'com.h2database:h2:1.4.200'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 롬복
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok'

	// 웹 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok 의존성
	implementation "org.projectlombok:lombok:1.18.38"

	// 시큐리티 의존성
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Redis DB Cloud 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	//JWT 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// OAuth2 의존성
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// GCP 관련 의존성
//	implementation 'com.google.cloud:spring-cloud-gcp-starter-secretmanager'
//	implementation 'com.google.cloud:google-cloud-storage'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
}

dependencyManagement {
	imports {
		// Spring Cloud 전반 (Feign, Gateway 등) 의존성 버전 관리
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		// GCP 관련 스타터(BOM) 관리 - Secret Manager, GCS 등
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// 환경별 application.properties 포함/제외 설정
def activeProfile = project.hasProperty("profile") ? project.getProperty("profile") : "local"

processResources {
	filesMatching("**/application.properties") {
		expand(profile: activeProfile)
	}

	// 환경에 따라 불필요한 설정 파일 제외
	if (activeProfile == "local") {
		exclude("application-prod.properties")
	} else if (activeProfile == "prod") {
		exclude("application-local.properties")
	}
}
