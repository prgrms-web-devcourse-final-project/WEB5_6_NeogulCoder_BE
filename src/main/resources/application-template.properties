# ==========================================================================================
# Application Template (DO NOT PUT SECRETS)
# ?? ?? ????/??? ???? ?????.
# - GCP: ${sm://secret-name} ?? ??
# - AWS: ${ENV_NAME} ????/Secrets Manager ??
# ==========================================================================================

# ---- Profile ----
# ?? ??/?? ? -Dspring.profiles.active=prod-gcp ?? prod-aws ? ??
spring.profiles.active=

# ---- Server ----
server.port=80
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ---- Domain / CORS (???? ?? ???) ----
front-server.domain=${FRONT_SERVER_DOMAIN:https://example-frontend.com}
app.domain=${APP_DOMAIN:https://example-backend.com}

# ---- File Upload / Multipart ----
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ---- Cache ----
spring.cache.type=caffeine
spring.cache.cache-names=authority
spring.cache.caffeine.spec=expireAfterWrite=10s

# ---- Logging ----
logging.level.root=info
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=info
logging.level.org.hibernate.type.descriptor.sql=info
logging.level.org.springframework.cloud.openfeign=info
logging.level.org.springframework.security=info
logging.level.org.springframework.web.client.RestTemplate=info
logging.level.org.springframework.security.oauth2.client.authentication.OAuth2LoginAuthenticationProvider=info
logging.level.org.springframework.security.oauth2.core.http.converter=info
spring.cloud.openfeign.client.config.default.logger-level=full

# ---- JPA ----
spring.jpa.open-in-view=false
spring.sql.init.mode=never
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# ???????????????????????????????????????????????????????????????????????????????????????????
# ??? ?? ??? ???? ??
# 1) GCP ?? (Secret Manager ?? ?)
#    - spring.config.import=sm:// ? ??, ?? ?? ??? sm://? ??
# 2) AWS ?? (ENV/Secrets Manager)
#    - ${ENV_NAME} ??? ????, ECS/EC2?? ????? ??
# ???????????????????????????????????????????????????????????????????????????????????????????

# [prod-gcp] ??  ==========================================================================
# spring.profiles: prod-gcp ?? ? ???
# ?? ??: -Dspring.profiles.active=prod-gcp
# ===========================================================================================
# spring.config.import=sm://  # GCP Secret Manager ?? ? ??

# spring.cloud.gcp.secretmanager.enabled=true
# google.cloud.storage.bucket=YOUR_GCS_BUCKET
# google.cloud.storage.project-id=YOUR_GCP_PROJECT

# ---- DB ----
#spring.datasource.url=${sm://db-url}
#spring.datasource.username=${sm://db-username}
#spring.datasource.password=${sm://db-password}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.hikari.maximum-pool-size=5

# ---- Redis ----
#spring.data.redis.host=${sm://redis-host}
#spring.data.redis.port=${sm://redis-port}
#spring.data.redis.username=${sm://redis-username}
#spring.data.redis.password=${sm://redis-password}
#spring.data.redis.ssl.enabled=true

# ---- JWT ----
#jwt.expiration=${sm://jwt-expiration}
#jwt.refresh-expiration=${sm://jwt-refresh-expiration}
#jwt.secret=${sm://jwt-secret}

# ---- Mail ----
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=${sm://smtp-username}
#spring.mail.password=${sm://smtp-password}
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

# ---- Google OAuth ----
#spring.security.oauth2.client.registration.google.client-id=${sm://google-client-id}
#spring.security.oauth2.client.registration.google.client-secret=${sm://google-secret}
#spring.security.oauth2.client.registration.google.redirect-uri=${sm://google-redirect-uri}
#spring.security.oauth2.client.registration.google.scope=profile,email
#spring.security.oauth2.client.registration.google.client-name=Google

# ---- LangChain/Gemini ----
#langchain4j.google-ai-gemini.chat-model.model-name=${sm://gemini-chat-model-name}
#langchain4j.google-ai-gemini.chat-model.api-key=${sm://gemini-chat-model}
#langchain4j.google-ai-gemini.chat-model.log-requests-and-responses=true
#langchain4j.google-ai-gemini.chat-model.max-output-tokens=500

# [prod-aws] ?? ==========================================================================
# spring.profiles: prod-aws ?? ? ???
# ?? ??: -Dspring.profiles.active=prod-aws
# ==========================================================================================

# ---- DB ----
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=5

# ---- Redis ----
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.username=${REDIS_USERNAME:default}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.ssl.enabled=true

# ---- JWT ----
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:31536000000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ---- Mail ----
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ---- Google OAuth ----
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.client-name=Google

# ---- LangChain/Gemini ----
langchain4j.google-ai-gemini.chat-model.model-name=${GEMINI_MODEL_NAME:gemini-2.0-flash-lite}
langchain4j.google-ai-gemini.chat-model.api-key=${GEMINI_API_KEY}
langchain4j.google-ai-gemini.chat-model.log-requests-and-responses=true
langchain4j.google-ai-gemini.chat-model.max-output-tokens=500
